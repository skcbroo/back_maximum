generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                Int                @id @default(autoincrement())
  nome              String
  email             String             @unique
  senha             String
  role              String             @default("cliente") // "admin" ou "cliente"

  // Recuperação de senha
  tokenRecuperacao  String?
  tokenExpira       DateTime?

  // Verificação de e-mail
  emailVerificado   Boolean            @default(false)
  tokenVerificacao  String?

  // Relacionamentos
  aplicacoes        Aplicacao[]
}

model ProdutoAplicacao {
  id            Int        @id @default(autoincrement())
  nome          String     // Ex: "Renda Fixa 6M", "Renda Fixa 12M"
  descricao     String?    // Detalhar ativos colateralizados, regras etc.
  taxaMensal    Float      // Ex: 0.02 (2% ao mês)
  prazoMeses    Int        // Duração da aplicação em meses
  ativo         Boolean    @default(true) // se está disponível para clientes

  criadoEm      DateTime   @default(now())
  aplicacoes    Aplicacao[]
}

model Aplicacao {
  id                Int              @id @default(autoincrement())
  usuario           Usuario          @relation(fields: [usuarioId], references: [id])
  usuarioId         Int
  produto           ProdutoAplicacao @relation(fields: [produtoId], references: [id])
  produtoId         Int

  valorAplicado     Float
  dataInicio        DateTime @default(now())
  dataFim           DateTime // calculado = dataInicio + prazoMeses do produto

  // Status
  status            String   @default("ativa") // ativa, finalizada, resgatada

  // Cache / projeções
  rendimentoTotal   Float?   // opcional: cache de rendimento até o fim
  valorResgate      Float?   // opcional: principal + rendimento esperado

  criadoEm          DateTime @default(now())
}
